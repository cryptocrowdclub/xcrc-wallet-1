language: cpp
dist: trusty
sudo: true
git:
  quiet: true
  depth: 5
branches:
  only:
  - master
  - /^v\d+\.\d+(\.\d+)?(-\S*)?$/
#  - /^deploy-.*$/
  except:
  - /^v\d+\.\d+\.\d+(\.\d+)?(-\S*)?$/
cache:
  timeout: 1000
  ccache: true
  directories:
  - depends/built
  - depends/work/build
  - depends/sdk-sources
#  - depends/i686-w64-mingw32
  - "$HOME/.ccache"
#  - usr/local/Homebrew
addons:
  apt:
    sources:
    - ppa:bitcoin/bitcoin
    packages:
    - autoconf
    - autotools-dev
    - binutils
    - bsdmainutils
    - build-essential
    - cmake
    - curl
    - libboost-all-dev
    - libbz2-dev
    - libcap-dev
    - libdb4.8-dev
    - libdb4.8++-dev
    - libevent-dev
    - libssl-dev
    - libtool
    - linux-libc-dev
    - miniupnpc
    - pkg-config
    - python-dev
    - python-setuptools
    - python3
    - python3-zmq
    - zip
    - zlib1g-dev
env:
  global:
  - BULWARK_VERSION=2.1.0.0
  - CCACHE_COMPRESS=1
  - CCACHE_SIZE=2500M
  - CCACHE_CPP2=1
  - CCACHE_TEMPDIR=/tmp/.ccache-temp
  - MAKEJOBS="-s -k -l 2.5 -j 8"
matrix:
  include:
  - name: Linux ARM 32 Bit
    addons:
      apt:
        packages:
        - g++-arm-linux-gnueabihf
        - binutils-arm-linux-gnueabihf
    env:
    - BULWARK_CONFIG="--enable-glibc-back-compat --with-gui=no"
    - HOST=arm-linux-gnueabihf
    - LABEL=ARM
    os: linux
#  - name: Linux i686 32 Bit
#    addons:
#      apt:
#        packages:
#        - bc
#        - g++-multilib
#        - libprotobuf-dev
#        - libqrencode-dev
#        - python3-zmq
#        - qtdeclarative5-dev
#   env:
#    - BULWARK_CONFIG="--enable-zmq --enable-glibc-back-compat
#      --with-gui=qt5 LDFLAGS=-static-libstdc++"
#    - HOST=i686-pc-linux-gnu
#    - LABEL=linux32
#    - PYZMQ=true
#    os: linux
  - name: Linux x86 64 Bit
    addons:
      apt:
        packages:
        - bc
        - libprotobuf-dev
        - libqrencode-dev
        - python3-zmq
        - qtdeclarative5-dev
    env:
    - BULWARK_CONFIG="--enable-zmq --enable-glibc-back-compat
      --with-gui=qt5 LDFLAGS=-static-libstdc++"
    - CPPFLAGS="-DDEBUG_LOCKORDER -DENABLE_DASH_DEBUG"
    - HOST=x86_64-pc-linux-gnu
    - LABEL=linux64
    - PYZMQ=true
    os: linux
  - name: Windows i686 32 Bit
    addons:
      apt:
        packages:
        - g++-mingw-w64-i686 bc
        - libprotobuf-dev
        - libqrencode-dev
        - linux-libc-dev:i386
        - nsis
        - python3
        - qtdeclarative5-dev
    env:
    - BULWARK_CONFIG="--with-gui=qt5"
    - HOST=i686-w64-mingw32
    - LABEL=win32
    os: linux
#  - name: Windows x86 64 Bit
#    addons:
#      apt:
#        packages:
#        - bc
#        - g++-mingw-w64-x86-64
#        - libprotobuf-dev
#        - libqrencode-dev
#        - linux-libc-dev:i386
#        - nsis
#        - python3
#        - qtdeclarative5-dev
#    env:
#    - BULWARK_CONFIG="--with-gui=qt5 LDFLAGS=-Wa,-mbig-obj"
#    - HOST=x86_64-w64-mingw32
#    - LABEL=win64
#    os: linux
  - name: macOS x86 64 Bit
    env:
    - HOST=x86_64-apple-darwin
    - LABEL=macOS
    os: osx
    osx_image: xcode9.2
before_install:
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update; fi
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo update-alternatives --install /usr/bin/ld ld /usr/bin/ld.gold 20; fi
install:
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install ccache; export PATH="/usr/local/opt/ccache/libexec:$PATH"; brew uninstall mercurial python; brew
  bundle; brew link --overwrite --force boost@1.57; fi
- if [ "$PYZMQ" = "true" ]; then pip install pyzmq --user ; fi
before_script:
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then unset CC CXX DISPLAY; fi
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then export LDFLAGS=-L/usr/local/opt/openssl/lib;
  export CPPFLAGS=-I/usr/local/opt/openssl/include; fi
- GLOBAL_CONFIG="--enable-reduce-exports --prefix=$TRAVIS_BUILD_DIR/depends/$HOST"
script:
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then make $MAKEJOBS -C depends HOST="$HOST";
  depends/$HOST/native/bin/ccache --max-size=$CCACHE_SIZE; sh ./autogen.sh; ./configure
  --cache-file=config.cache $GLOBAL_CONFIG $BULWARK_CONFIG; make $MAKEJOBS; fi
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then sh ./autogen.sh; ./configure --enable-reduce-exports;
  make deploy; fi
before_deploy:
#- true
#- export TRAVIS_TAG=${TRAVIS_TAG:-$(date +'%Y%m%d%H%M%S')-$(git log --format=%h -1)}
#- export TRAVIS_TAG=${TRAVIS_TAG:-$(date +'%Y%m%d%H%M')}
#- git tag $TRAVIS_TAG
  - mkdir $TRAVIS_BUILD_DIR/deploy
  - if [[ "$LABEL" == "ARM" ]]; then cp $TRAVIS_BUILD_DIR/src/bulwark-cli $TRAVIS_BUILD_DIR/src/bulwark-tx $TRAVIS_BUILD_DIR/src/bulwarkd $TRAVIS_BUILD_DIR/deploy; fi
  - if [[ "$LABEL" == "linux64" ]]; then cp $TRAVIS_BUILD_DIR/src/bulwark-cli $TRAVIS_BUILD_DIR/src/bulwark-tx $TRAVIS_BUILD_DIR/src/bulwarkd $TRAVIS_BUILD_DIR/deploy; cp $TRAVIS_BUILD_DIR/src/qt/bulwark-qt $TRAVIS_BUILD_DIR/deploy; strip $TRAVIS_BUILD_DIR/deploy/*; fi
  - if [[ "$LABEL" == "win32" ]]; then cp $TRAVIS_BUILD_DIR/src/bulwark-cli.exe $TRAVIS_BUILD_DIR/src/bulwark-tx.exe $TRAVIS_BUILD_DIR/src/bulwarkd.exe $TRAVIS_BUILD_DIR/deploy; cp $TRAVIS_BUILD_DIR/src/qt/bulwark-qt.exe $TRAVIS_BUILD_DIR/deploy; strip $TRAVIS_BUILD_DIR/deploy/*; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then cp $TRAVIS_BUILD_DIR/Bulwark-Qt.dmg $TRAVIS_BUILD_DIR/deploy; strip $TRAVIS_BUILD_DIR/deploy/*; fi
  - cd $TRAVIS_BUILD_DIR/deploy
  - ls -lh;
#  - if [[ "$LABEL" == "ARM" ]]; then tar -zvcf bulwark-bin-${TRAVIS_BRANCH}.${TRAVIS_BUILD_NUMBER}-$LABEL.tar.gz *; fi
  - if [[ "$LABEL" == "ARM" ]]; then zip -P "$DEVPW" bulwark-bin-${TRAVIS_BRANCH}.${TRAVIS_BUILD_NUMBER}-$LABEL.zip *; fi
#  - if [[ "$LABEL" == "linux64" ]]; then tar -zvcf bulwark-bin-${TRAVIS_BRANCH}.${TRAVIS_BUILD_NUMBER}-$LABEL.tar.gz *; fi
  - if [[ "$LABEL" == "linux64" ]]; then zip -P "$DEVPW" bulwark-bin-${TRAVIS_BRANCH}.${TRAVIS_BUILD_NUMBER}-$LABEL.zip *; fi
  - if [[ "$LABEL" == "win32" ]]; then zip -P "$DEVPW" bulwark-bin-${TRAVIS_BRANCH}.${TRAVIS_BUILD_NUMBER}-$LABEL.zip *; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then zip -P "$DEVPW" bulwark-bin-${TRAVIS_BRANCH}.${TRAVIS_BUILD_NUMBER}-$LABEL.zip *; fi
deploy:
  provider: releases
  api_key: $GH_TOKEN
  file_glob: true
  file: $TRAVIS_BUILD_DIR/deploy/bulwark-bin*
  overwrite: true
  skip_cleanup: true
  draft: true
  name: ${TRAVIS_BRANCH}.${TRAVIS_BUILD_NUMBER}-${LABEL}
  tag_name: ${TRAVIS_BRANCH}.${TRAVIS_BUILD_NUMBER}-${LABEL}
  on:
    repo: cryptocrowdclub/xcrc-wallet-1
    all_branches: true
 #   branch: travisci-headless
 #   tags: false #true
    
